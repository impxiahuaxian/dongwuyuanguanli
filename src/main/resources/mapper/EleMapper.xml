<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bishe.ssm.dao.EleMapper">
  <resultMap id="BaseResultMap" type="com.bishe.ssm.bean.Ele">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="elename" jdbcType="VARCHAR" property="elename" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="comefrom" jdbcType="VARCHAR" property="comefrom" />
    <result column="tozootime" jdbcType="DATE" property="tozootime" />
    <result column="eledescribe" jdbcType="VARCHAR" property="eledescribe" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sex, elename, age, comefrom, DATE_FORMAT(tozootime,'%Y-%m-%d') tozootime, eledescribe,classes
  </sql>
  <select id="selectByExample" parameterType="com.bishe.ssm.bean.EleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ele
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ele
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ele
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bishe.ssm.bean.EleExample">
    delete from ele
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bishe.ssm.bean.Ele">
    insert into ele (id, sex, elename, 
      age, comefrom, tozootime, 
      eledescrib,classes)
    values (#{id,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{elename,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{comefrom,jdbcType=VARCHAR}, #{tozootime,jdbcType=VARCHAR},
      #{eledescribe,jdbcType=VARCHAR},"脊索动物")
  </insert>
  <insert id="insertSelective" parameterType="com.bishe.ssm.bean.Ele">
        insert into ele(id,sex,elename,age,comefrom,tozootime,eledescribe,classes)
            values(#{id},#{sex},#{elename},#{age},#{comefrom},#{tozootime},#{eledescribe},"脊索动物");
    </insert>
  <select id="countByExample" parameterType="com.bishe.ssm.bean.EleExample" resultType="java.lang.Long">
    select count(*) from ele
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ele
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.elename != null">
        elename = #{record.elename,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.comefrom != null">
        comefrom = #{record.comefrom,jdbcType=VARCHAR},
      </if>
      <if test="record.tozootime != null">
        tozootime = #{record.tozootime,jdbcType=DATE},
      </if>
      <if test="record.eledescribe != null">
        eledescribe = #{record.eledescribe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ele
    set id = #{record.id,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=VARCHAR},
      elename = #{record.elename,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      comefrom = #{record.comefrom,jdbcType=VARCHAR},
      tozootime = #{record.tozootime,jdbcType=DATE},
      eledescribe = #{record.eledescribe,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bishe.ssm.bean.Ele">
    update ele
    <set>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="elename != null">
        elename = #{elename,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="comefrom != null">
        comefrom = #{comefrom,jdbcType=VARCHAR},
      </if>
      <if test="tozootime != null">
        tozootime = #{tozootime,jdbcType=DATE},
      </if>
      <if test="eledescribe != null">
        eledescribe = #{eledescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bishe.ssm.bean.Ele">
    update ele
    set sex = #{sex,jdbcType=VARCHAR},
      elename = #{elename,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      comefrom = #{comefrom,jdbcType=VARCHAR},
      tozootime = #{tozootime,jdbcType=VARCHAR},
      eledescribe = #{eledescribe,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id = "getByName" parameterType="String" resultMap="BaseResultMap">
    select id,sex,elename,age,comefrom,tozootime,eledescribe
    from ele
    where elename like  #{elename}
  </select>
  <select id = "getAll" parameterType="String" resultMap="BaseResultMap">
    select id,sex,elename,age,comefrom,tozootime,eledescribe
    from ele
  </select>

</mapper>